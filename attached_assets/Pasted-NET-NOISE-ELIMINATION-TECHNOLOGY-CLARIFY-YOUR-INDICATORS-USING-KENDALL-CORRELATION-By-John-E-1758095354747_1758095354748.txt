NET  -  NOISE ELIMINATION TECHNOLOGY 
CLARIFY YOUR INDICATORS USING KENDALL CORRELATION 
By John Ehlers 
The purpose of technical indicators is to provide an insight into the inefficiencies in the 
market to make better informed trading decisions.  The problem with most indicators is 
they use only a short amount of data and are, therefore, noisy themselves.  Noise can be 
removed by smoothing filters which cause indicator lag and delayed decisions.  These 
delays can be costly.  I will show you how to clarify your indicators without filtering.  This 
is accomplished using the nonlinearity of a rank-ordered Kendall correlation. 
In general, Kendall correlation compares the ranked order of two sets of random 
variables.  Pairs of ranked variables can be either concordant or discordant.  I’ll leave the 
details of the Kendall correlation description to Wikipedia.  The correlation equation is: 
When used as Noise Elimination Technology, the “y” variable is a straight line with a 
positive slope and the “x” variable is the indicator output.  The Kendall correlation in this 
configuration basically strips out the noise components not going in the main direction of 
the indicator in a nonlinear fashion. 
The best way to describe NET is with an example.  I will start with MyRSI, a version of 
the RSI indicator that I derived in the May 2018 issue of Stocks & Commodities.  I prefer 
this version because it provides for the RSI to swing between -1 and +1.  This formulation 
is easier to use when dealing with market cycles.  The computation accrues Closes Up 
(CU) and Closes Down (CD).  The MyRSI indicator is simply the ratio of their difference 
divided by their sum.  This is a relatively noisy indicator. 
The second block of code is the Noise Elimination Technology, and can be applied to any 
other indicator of your choice with the minor renaming of the indicator assigned to the 
X[] array.  The input length parameters for the indicator and for NET do not necessarily 
have the same value.  For this example the MyRSI indicator is assigned to the X[] array.  
A line with a positive slope is assigned to the Y[] array.  Y[] has a positive slope because 
we are counting backwards from the current bar.  The numerator of the Kendall 
correlation is computed over both indexes of the summation.  The computation is 
simplified from the general equation because sgn(yi – yj) is always negative because Y[] 
is a straight line.  The denominator is a simple calculation, and NET is the ratio of the 
numerator to the denominator. 
The effectiveness of the nonlinear Noise Elimination Technology is demonstrated in Figure 
1.  The candlestick chart is over a year’s worth of daily data on SPY.  I have used the 
standard 14 day length to compute MyRSI, and the same length for NET.  The red 
indicator line is MyRSI, and the blue indicator line is the NET output.  Clearly, the goal of 
reducing the indicator noise without introducing lag has been obtained.   
 
NET does not necessarily replace smoothing filters, but it can work together with them 
to provide the best visual presentation.  I hope that applying NET to your favorite 
indicators will help improve the clarity of your trading. 
 
 
Figure 1.  NET Reduces Indicator Noise Without Inducing Lag 
 
 
  
Code Listing 1.  MyRSI with Noise Elimination Technology 
{ 
     MyRSI with Noise Elimination Technology 
     (C) 2005-2020  John F. Ehlers 
} 
 
Inputs: 
 RSILength(14), 
 NETLength(14); 
  
Vars: 
 CU(0), CD(0), count(0), MyRSI(0); 
  
//Accumulate "Closes Up" and "Closes Down"  
CU = 0; 
CD = 0; 
For count = 0 to RSILength -1 Begin 
 If Close[count] - Close[count + 1] > 0 Then CU = CU + Close[count] - Close[count + 1]; 
 If Close[count] - Close[count + 1] < 0 Then CD = CD + Close[count + 1] - Close[count]; 
End; 
If CU + CD <> 0 Then MyRSI = (CU - CD) / (CU + CD); 
 
//Noise Elimination Technology (NET) 
Vars:  Num(0), Denom(0), K(0), NET(0); 
Arrays:  X[100](0), Y[100](0); 
 
For count = 1 to NETLength Begin 
 X[count] = MyRSI[count - 1];  
 Y[count] = -count; 
End; 
 
Num = 0; 
For count = 2 to NETLength Begin 
 For K = 1 to count - 1 Begin 
  Num = Num - Sign(X[count] - X[K]); 
 End; 
End; 
Denom = .5*NETLength*(NETLength - 1); 
NET = Num / Denom; 
 
//>>>>>>>>>>>>>>  Plots  >>>>>>>>>>>>>>>>>>>>>>>>>>> 
Plot1(MyRSI); 
Plot4(0); 
Plot2(NET);