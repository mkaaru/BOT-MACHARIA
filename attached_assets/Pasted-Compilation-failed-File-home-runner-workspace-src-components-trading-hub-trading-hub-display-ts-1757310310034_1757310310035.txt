Compilation failed

File: /home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:1:1
  × Module build failed:
  ├─▶   ×   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:803:1]
  │     │  800 │             // Enhanced API connection setup with better error handling
  │     │  801 │             if (!api_base.api || api_base.api.connection?.readyState !== 1) {
  │     │  802 │                 console.log('Connecting to API...');
  │     │  803 │                 await api_base.init();
  │     │      ·                       ────────
  │     │  804 │                 await new Promise(resolve => setTimeout(resolve, 3000));
  │     │  805 │
  │     │  806 │                 if (!api_base.api || api_base.api.connection?.readyState !== 1) {
  │     │      ╰────
  │     │   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:804:1]
  │     │  801 │             if (!api_base.api || api_base.api.connection?.readyState !== 1) {
  │     │  802 │                 console.log('Connecting to API...');
  │     │  803 │                 await api_base.init();
  │     │  804 │                 await new Promise(resolve => setTimeout(resolve, 3000));
  │     │      ·                       ───
  │     │  805 │
  │     │  806 │                 if (!api_base.api || api_base.api.connection?.readyState !== 1) {
  │     │  807 │                     throw new Error('Failed to establish API connection after initialization');
  │     │      ╰────
  │     │   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:815:1]
  │     │  812 │             if (!api_base.is_authorized) {
  │     │  813 │                 console.log('Authorizing API with token...');
  │     │  814 │                 try {
  │     │  815 │                     const authResponse = await api_base.api?.send({ authorize: token });
  │     │      ·                                                ────────
  │     │  816 │                     console.log('Authorization response:', authResponse);
  │     │  817 │                     await new Promise(resolve => setTimeout(resolve, 2000));
  │     │      ╰────
  │     │   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:817:1]
  │     │  814 │                 try {
  │     │  815 │                     const authResponse = await api_base.api?.send({ authorize: token });
  │     │  816 │                     console.log('Authorization response:', authResponse);
  │     │  817 │                     await new Promise(resolve => setTimeout(resolve, 2000));
  │     │      ·                           ───
  │     │  818 │
  │     │  819 │                     if (!api_base.is_authorized && authResponse?.error) {
  │     │  820 │                         throw new Error(`Authorization failed: ${authResponse.error.message || authResponse.error.code}`);
  │     │      ╰────
  │     │   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:834:1]
  │     │  831 │             }
  │     │  832 │
  │     │  833 │             // Get current balance first
  │     │  834 │             const balanceResponse = await api_base.api?.send({ balance: 1 });
  │     │      ·                                           ────────
  │     │  835 │             console.log('Current balance before trade:', balanceResponse?.balance?.balance);
  │     │  836 │
  │     │  837 │             // Prepare enhanced trade parameters
  │     │      ╰────
  │     │   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:888:1]
  │     │  885 │             globalObserver.emit('ui.log.info', `${strategy}: ${contractType} on ${symbol} - Stake: ${currentStake}`);
  │     │  886 │
  │     │  887 │             // Send trade request through the API with optimized timeout
  │     │  888 │             const response = await new Promise((resolve, reject) => {
  │     │      ·                                    ───
  │     │  889 │                 const subscription = api_base.api?.onMessage().subscribe((msg: any) => {
  │     │  890 │                     if (msg.buy) {
  │     │  891 │                         subscription.unsubscribe();
  │     │      ╰────
  │     │   × await isn't allowed in non-async function
  │     │      ╭─[/home/runner/workspace/src/components/trading-hub/trading-hub-display.tsx:966:1]
  │     │  963 │                     waitingForSettlementRef.current = true;
  │     │  964 │                 }
  │     │  965 │
  │     │  966 │                 const contractResult = await monitorContract(contractId, isO5U4Part, contractType, symbol, stakeAmount);
  │     │      ·                                              ───────────────
  │     │  967 │
  │     │  968 │                 if (!isO5U4Part) {
  │     │  969 │                     handleTradeResult(contractResult, buyPrice);
  │     │      ╰────
  │     │
  │   
  ╰─▶ Syntax Error
Fix error, click outside, or press Esc to close the overlay.

Disable overlay by setting Rsbuild's dev.client.overlay config to false.