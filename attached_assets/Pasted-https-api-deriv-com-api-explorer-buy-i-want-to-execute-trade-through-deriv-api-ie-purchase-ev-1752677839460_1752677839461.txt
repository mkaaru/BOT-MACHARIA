https://api.deriv.com/api-explorer/#buy 

 i want to execute trade through deriv api  ie purchase even digits from deriv


ChatGPT said:
To trade the ‚Äúeven‚Äù digit contract on Deriv (i.e., predict the last tick's last digit is even), here‚Äôs how you can implement it using the Deriv API:

üìò Step-by-Step Guide
1. Authenticate (via WebSocket)
First, send an authorize request using your app token (make sure it's enabled for trading).

json
Copy
Edit
{
  "authorize": "YOUR_API_TOKEN"
}
2. Request a Price Proposal
Get a quote for the DIGITEVEN contract:

json
Copy
Edit
{
  "proposal": 1,
  "amount": 1,              // your stake
  "basis": "stake",         // or "payout"
  "contract_type": "DIGITEVEN",
  "currency": "USD",
  "symbol": "R_100",        // for example, Volatility 100 Index
  "duration": 1,
  "duration_unit": "t",
  "proposal": 1
}
This returns a proposal object, including a proposal.id and price 
github.com
+11
developers.deriv.com
+11
docsbot.ai
+11
.

3. Place the Trade
Buy the contract using the returned id:

json
Copy
Edit
{
  "buy": proposal.id
}
You'll receive a contract_id‚Äîyour unique trade identifier 
developers.deriv.com
.

4. Monitor or Sell
Check contract status:

json
Copy
Edit
{
  "proposal_open_contract": 1,
  "contract_id": "YOUR_CONTRACT_ID"
}
If you want to exit early, call sell with the same contract_id.

üéØ Example in Python (WebSocket)
python
Copy
Edit
import websocket, json

API_TOKEN = "YOUR_TOKEN_HERE"
SYMBOL = "R_100"  # or any Deriv digit market
STAKE = 1.0

ws = websocket.create_connection("wss://ws.binaryws.com/websockets/v3?app_id=1089")
ws.send(json.dumps({"authorize": API_TOKEN}))
print(ws.recv())

# Request even-digit proposal
ws.send(json.dumps({
    "proposal": 1,
    "amount": STAKE,
    "basis": "stake",
    "contract_type": "DIGITEVEN",
    "currency": "USD",
    "symbol": SYMBOL,
    "duration": 1,
    "duration_unit": "t"
}))
proposal_response = json.loads(ws.recv())
print("Proposal response:", proposal_response)

proposal_id = proposal_response.get("proposal", {}).get("id")
if not proposal_id:
    print("Error getting proposal")
    exit(1)

# Buy even-digit contract
ws.send(json.dumps({"buy": proposal_id}))
buy_response = json.loads(ws.recv())
print("Buy response:", buy_response)

contract_id = buy_response.get("buy", {}).get("contract_id")
print("Contract ID:", contract_id)

# Monitor contract outcome
ws.send(json.dumps({
    "proposal_open_contract": 1,
    "contract_id": contract_id
}))
open_contract = json.loads(ws.recv())
print("Contract status:", open_contract)
üìù Notes
Replace "YOUR_TOKEN_HERE" with your actual Deriv API token.

Modify SYMBOL, STAKE, and currency as needed.

This is a minimal example. For production, include:

Error‚Äëhandling and reconnection logic

Subscription to live ticks (using ticks)

Staking strategies or trade logic

Logging and monitoring

