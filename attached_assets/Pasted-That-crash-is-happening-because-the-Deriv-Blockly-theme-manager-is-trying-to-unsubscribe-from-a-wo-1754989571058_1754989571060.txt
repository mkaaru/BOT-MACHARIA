That crash is happening because the Deriv Blockly theme manager is trying to “unsubscribe” from a workspace that was never subscribed in the first place.
It’s unrelated to your "TradeCortex" meta description changes — that just happened earlier in the flow, but the actual break is in the workspace teardown.

What’s going on
From the stack trace:

ThemeManager.unsubscribeWorkspace → gets called inside
WorkspaceSvg.dispose

That’s triggered during your React component’s unmount (onUnmount)

The unsubscribe fails because the workspace was never registered with ThemeManager (no prior subscribeWorkspace call), or it was already disposed.

In React dev builds, Strict Mode can run mount/unmount twice, making this more likely.

How to fix
You need to guard the unsubscribe so it only happens if the workspace was actually subscribed.

Example fix
If you control the code where the workspace is subscribed/unsubscribed:

javascript
Copy
Edit
let isWorkspaceSubscribed = false;

function mountWorkspace(workspace) {
    ThemeManager.subscribeWorkspace(workspace);
    isWorkspaceSubscribed = true;
}

function unmountWorkspace(workspace) {
    if (isWorkspaceSubscribed) {
        ThemeManager.unsubscribeWorkspace(workspace);
        isWorkspaceSubscribed = false;
    }
}
If you can’t track that manually, you can patch around it:

javascript
Copy
Edit
try {
    ThemeManager.unsubscribeWorkspace(workspace);
} catch (err) {
    console.warn("Workspace unsubscribe skipped:", err.message);
}
Improve UX for the user
Instead of letting the app fully crash, wrap your main app or the blockly component in a React Error Boundary:

jsx
Copy
Edit
class ErrorBoundary extends React.Component {
  state = { hasError: false };
  static getDerivedStateFromError() { return { hasError: true }; }
  componentDidCatch(error, info) {
    console.error("Error caught by boundary:", error, info);
  }
  render() {
    return this.state.hasError
      ? <div>Something went wrong. Please reload.</div>
      : this.props.children;
  }
}
Then:

jsx
Copy
Edit
<ErrorBoundary>
  <BlocklyWorkspaceComponent />
</ErrorBoundary>